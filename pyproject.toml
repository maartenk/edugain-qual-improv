[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "edugain-analysis"
version = "2.0.0"
description = "Comprehensive eduGAIN metadata quality analysis"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "eduGAIN Quality Team", email = "edugain@example.org"}]
maintainers = [{name = "eduGAIN Quality Team", email = "edugain@example.org"}]
keywords = ["edugain", "saml", "metadata", "federation"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Quality Assurance",
    "Typing :: Typed",
]
requires-python = ">=3.11"
dependencies = [
    "requests>=2.28.0",
    "platformdirs>=3.0.0",
]

[project.optional-dependencies]
web = ["streamlit>=1.28.0"]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "black>=23.9.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
]

[project.urls]
Homepage = "https://github.com/maartenk/edugain-qual-improv"
Repository = "https://github.com/maartenk/edugain-qual-improv"
Issues = "https://github.com/maartenk/edugain-qual-improv/issues"
Documentation = "https://edugain-analysis.readthedocs.io"

[project.scripts]
edugain-analyze = "edugain_analysis.cli.main:main"
edugain-seccon = "edugain_analysis.cli.seccon:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["edugain_analysis*"]

[tool.setuptools.package-data]
edugain_analysis = ["py.typed"]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "S", "B", "A", "C4", "PIE", "T20"]
ignore = [
    "E501",    # Line too long (handled by Black)
    "T201",    # Print statements allowed in CLI applications
    "S314",    # XML parsing for trusted eduGAIN metadata
    "S101",    # Assert statements allowed in tests
    "S108",    # Temp file usage in tests is acceptable
    "S102",    # Exec usage in tests for __main__ testing
    "B904",    # Exception chaining not required for library code
    "F841",    # Unused variables in test code
    "B007",    # Loop variables not used (federation_key iteration)
]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.black]
line-length = 88
target-version = ['py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.pytest_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src/edugain_analysis",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src/edugain_analysis"]
omit = [
    "tests/*",
    "*/test_*",
]
parallel = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2
