[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "edugain-qual-improv"
version = "1.0.0"
description = "eduGAIN Security Contact Analysis Tool"
readme = "README.md"
authors = [
    {name = "eduGAIN Quality Improvement", email = "edugain@example.org"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
requires-python = ">=3.9"
dependencies = [
    "requests>=2.28.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
]

[project.urls]
Repository = "https://github.com/maartenk/edugain-qual-improv"
Issues = "https://github.com/maartenk/edugain-qual-improv/issues"

[project.scripts]
seccon-nosirtfi = "seccon_nosirtfi:main"

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.pytest_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''


[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--verbose",
    "--tb=short",
    "--cov=privacy_security_analysis",
    "--cov=seccon_nosirtfi",
    "--cov-report=term-missing",
    "--cov-report=html",
]
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = [
    "privacy_security_analysis",
    "seccon_nosirtfi",
]
omit = [
    "tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2
